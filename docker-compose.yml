version: '3.9'

services:
  work:
    image: node:14-alpine3.12
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: recruitment_api_work
    working_dir: /home/recruitment
    volumes:
      - ./:/home/recruitment
    ports:
      - '${PORT}:${PORT}'
    command: yarn start:dev
    restart: unless-stopped
    depends_on:
      - database
      - adminer
    networks:
      - recruitment_networks
  dev:
    image: node:14-alpine3.12
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: recruitment_api_development
    working_dir: /home/recruitment
    volumes:
      - ./:/home/recruitment
    ports:
      - '${PORT}:${PORT}'
    command: yarn start
    restart: unless-stopped
    depends_on:
      - database
      - adminer
    networks:
      - recruitment_networks
  prod:
    image: node:14-alpine3.12
    build:
      context: .
      dockerfile: ./Dockerfile
    container_name: recruitment_api_product
    working_dir: /home/recruitment
    volumes:
      - ./:/home/recruitment
    ports:
      - '${PORT}:${PORT}'
    command: yarn start:prod
    restart: unless-stopped
    depends_on:
      - database
      - adminer
    networks:
      - recruitment_networks
  database:
    container_name: recruitment_database
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: '${DATABASE_USER}'
      POSTGRES_PASSWORD: '${DATABASE_PASSWORD}'
      POSTGRES_DB: '${DATABASE_NAME}'
      TZ: 'Asia/Ho_Chi_Minh'
      PGTZ: 'Asia/Ho_Chi_Minh'
    expose:
      - '${DATABASE_PORT}'
    volumes:
      - ./database/:/var/lib/postgresql/data
    networks:
      - recruitment_networks
  adminer:
    container_name: adminer
    image: adminer:latest
    restart: always
    ports:
      - 5050:8080
    depends_on:
      - database
    networks:
      - recruitment_networks

networks:
  recruitment_networks:
